@using System.Security.Claims
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model SpeedyWheelsSales.Application.Features.Ad.Queries.GetAdDetails.DTOs.AdDetailsDto
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["Ad details"];

    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" rel="stylesheet"/>
    <link rel="stylesheet" href="/css/styles.css">
}

<div class="container">
    <div class="row">
        <div class="col-md-8">
            <div id="carouselExampleControls" class="carousel zoom" data-bs-ride="carousel" data-bs-interval="false">
                <div class="carousel-inner">
                    @foreach (var photo in Model.PhotoDtos)
                    {
                        <div class="carousel-item @(photo.IsMain ? "active" : "")">
                            <img src="@photo.Url" class="d-block w-100" alt="Car Photo">
                        </div>
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
            <div class="card mt-3">
                <div class="card-body">
                    <h5 class="card-title text-center">@Model.CarDto.Brand.ToUpper() @Model.CarDto.Model.ToUpper() @Model.CarDto.ManufactureDate.Year</h5>
                    <p class="card-text text-left font-weight-bold text-success custom-display">
                        <i class="fa-solid fa-dollar-sign"></i> @Model.CarDto.Price.ToString("0.##")
                    </p>
                    <p class="card-text">
                        <i class="fa-solid fa-gauge-high"></i> @Model.CarDto.Mileage km
                        <span class="float-right">
                            <i class="fa-solid fa-location-dot"></i> @Model.City
                        </span>
                    </p>
                    <p class="card-text">
                        <i class="fa-solid fa-gas-pump"></i> @Model.CarDto.EngineType, @Model.CarDto.EngineSize L
                        <span class="float-right">
                            <i class="fa-sharp fa-solid fa-gears"></i> @Model.CarDto.Transmission
                        </span>
                    </p>
                    <p class="badge badge-primary">
                        <i class="fa-solid fa-car"></i> @Model.CarDto.Plates
                    </p>
                    <p class="badge badge-primary float-right">
                        <i class="fa-solid fa-barcode"></i> @Model.CarDto.Vin
                    </p>
                    <p class="card-text">
                        <i class="fa-solid fa-circle-info"></i> @Model.Description
                    </p>
                    <p class="card-text">
                        <i class="fa-solid fa-gas-pump"></i> @Model.CarDto.FuelConsumption L/100km
                        <span class="float-right">
                            <i class="fa-solid fa-palette"></i> @Model.CarDto.Color
                        </span>
                    </p>
                    <p class="card-text">
                        <i class="fa-solid fa-car-side"></i> @Model.CarDto.TypeOfDrive.ToString().ToUpper()
                    </p>
                    <p class="card-text text-muted">
                        <i class="fa-solid fa-clock"></i> @Model.CreatedAt.ToShortDateString()
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card mt-3">
                <div class="card-body">
                    @if (Model.AppUserDto.PhotoUrl != null)
                    {
                        <img src="@Model.AppUserDto.PhotoUrl" class="card-img-top" alt="User Photo">
                    }
                    else
                    {
                        <img src="/genericProfile.png" class="card-img-top" alt="User Photo">
                    }
                    <div class="card-body">
                        <h5 class="card-title">@Model.AppUserDto.Name</h5>
                        <p class="card-text">
                            <i class="fa-solid fa-at"></i> @Model.AppUserDto.UserName
                        </p>
                        @if (Model.AppUserDto.Location != null)
                        {
                            <p class="card-text">
                                <i class="fa-solid fa-location-dot"></i> @Model.AppUserDto.Location
                            </p>
                        }
                        @if (Model.AppUserDto.Bio != null)
                        {
                            <p class="card-text">
                                <i class="fa-solid fa-address-card"></i> @Model.AppUserDto.Bio
                            </p>
                        }
                        <p class="card-text text-muted">
                            <i class="fa-solid fa-clock"></i>@Localizer["Registered"]:@Model.AppUserDto.RegisterDate.ToShortDateString()
                        </p>
                    </div>

                    @if (User.Identity.IsAuthenticated && !Model.IsAuthor)
                    {
                        <form class="text-center" asp-controller="Chat" asp-action="GetChat" method="get">
                            <input type="hidden" name="currUserUsername" value="@User.FindFirstValue("username")"/>
                            <input type="hidden" name="recipientUsername" value="@Model.AppUserDto.UserName"/>
                            <button type="submit" class="btn btn-primary rounded-pill px-3" style="width: 100%;">@Localizer["Open chat"]</button>
                        </form>
                    }
                    @if (!Model.IsAuthor)
                    {
                        <form class="text-2 mt-2" asp-controller="Profile" asp-action="GetProfile" method="get">
                            <input type="hidden" name="username" value="@Model.AppUserDto.UserName"/>
                            <button type="submit" class="btn btn-primary rounded-pill px-3" style="width: 100%;">@Localizer["Profile"]</button>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>